function OUT = Q1_sal_vs_ketamine_single_unit()%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Is there a significant difference in firing rate of neurons between pre and post saline and% ketamine injections %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Define variables.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%OUT = [];bin_size_ms = 2;acorr_width_ms = 200;       % defining bin sizes and thingsPLOT_IT = true;%GP.Colors.Saline = [.1 .1 .8];intervals_around_ket_min = [-20 -5; 5 20];intervals_around_sal_min = [-20 -5; 5 20];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% This function loads a ton of things that are typically used% for any analysis.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% try    [GP,E,EVT,SP,RHD,META,DEPTHS,TS] = LK_Load_Important_Things;% catch%     disp('Failed to load files on first try for some reason. Box?')%     pause(10)%     [GP,E,EVT,SP,RHD,META,DEPTHS,TS] = LK_Load_Important_Things;% end    OUT.DEPTHS = DEPTHS; % Send this info out of the function for meta analysis.OUT.META = META;OUT.EVT = EVT;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Extract the relevant times.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Injection period Sal and Ketif any(ismember(E.EventID,'SalineInjectionStart'))    TIMES.SalStartEndUsec(1,1) = E.MinFromStart(E.EventID == 'SalineInjectionStart')*60*1e6;endif any(ismember(E.EventID,'SalineInjectionEnd'))    TIMES.SalStartEndUsec(1,2) = E.MinFromStart(E.EventID == 'SalineInjectionEnd')*60*1e6;endif any(ismember(E.EventID,'KetInjectionStart'))    TIMES.KetStartEndUsec(1,1) = E.MinFromStart(E.EventID == 'KetInjectionStart')*60*1e6;endif any(ismember(E.EventID,'KetInjectionEnd'))    TIMES.KetStartEndUsec(1,2) = E.MinFromStart(E.EventID == 'KetInjectionEnd')*60*1e6;end% Baseline same for both saline and ketamine i.e. period before saline% injectionTIMES.BaselineUsec(1,1) = TIMES.SalStartEndUsec(1) + intervals_around_sal_min(1,1)*60*1e6;TIMES.BaselineUsec(1,2) = TIMES.SalStartEndUsec(1) + intervals_around_sal_min(1,2)*60*1e6;% TIMES.KetBaselineUsec(1,1) = TIMES.KetStartEndUsec(1) + intervals_around_ket_min(1,1)*60*1e6;% TIMES.KetBaselineUsec(1,2) = TIMES.KetStartEndUsec(1) + intervals_around_ket_min(1,2)*60*1e6;% Post injection periodTIMES.SalPostInjectionUsec(1,1) = TIMES.SalStartEndUsec(2) + intervals_around_sal_min(2,1)*60*1e6;TIMES.SalPostInjectionUsec(1,2) = TIMES.SalStartEndUsec(2) + intervals_around_sal_min(2,2)*60*1e6;TIMES.KetPostInjectionUsec(1,1) = TIMES.KetStartEndUsec(2) + intervals_around_ket_min(2,1)*60*1e6;TIMES.KetPostInjectionUsec(1,2) = TIMES.KetStartEndUsec(2) + intervals_around_ket_min(2,2)*60*1e6;OUT.TM = TIMES;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Load inertial, POS, and calculate string pull rate.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%IMU = LK_Load_and_Process_IMU('Inertial_data.mat');POS = LK_Load_and_Clean_POS('POS.mat');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Find indices for the times for baseline, and post saline and ketamine periods.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% POS% Baseline Saline KetamineIX1 = POS.Time_uS > TIMES.BaselineUsec(1) & POS.Time_uS < TIMES.BaselineUsec(2);IX2 = POS.Time_uS > TIMES.SalPostInjectionUsec(1,1) & POS.Time_uS < TIMES.SalPostInjectionUsec(1,2);IX3 = POS.Time_uS > TIMES.KetPostInjectionUsec(1,1) & POS.Time_uS < TIMES.KetPostInjectionUsec(1,2);OUT.Speed_Base_Sal_Ket = [nanmean(POS.speed(IX1)) nanmean(POS.speed(IX2)) nanmean(POS.speed(IX3))];% % Ketamine baseline and post% IX1 = POS.Time_uS > TIMES.BaselineUsec(1) & POS.Time_uS < TIMES.BaselineUsec(2);% IX2 = POS.Time_uS > TIMES.KetPostInjectionUsec(1,1) & POS.Time_uS < TIMES.KetPostInjectionUsec(1,2);% OUT.Ket_Speed_Base_After = [nanmean(POS.speed(IX1)) nanmean(POS.speed(IX2))];% IMU% Baseline Saline KetamineIX1 = IMU.t_uS > TIMES.BaselineUsec(1) & IMU.t_uS < TIMES.BaselineUsec(2);IX2 = IMU.t_uS > TIMES.SalPostInjectionUsec(1,1) & IMU.t_uS < TIMES.SalPostInjectionUsec(1,2);IX3 = IMU.t_uS > TIMES.KetPostInjectionUsec(1,1) & IMU.t_uS < TIMES.KetPostInjectionUsec(1,2);% Store information for analysisOUT.Jerk_Base_Sal_Ket = [nanmean(IMU.absjerk(IX1)) nanmean(IMU.absjerk(IX2)) nanmean(IMU.absjerk(IX3))];OUT.JerkPC1_Base_Sal_Ket = [nanmean(IMU.absjerkpc(IX1)) nanmean(IMU.absjerkpc(IX2)) nanmean(IMU.absjerkpc(IX3))];OUT.IMU_Speed_Base_Sal_Ket = [nanmean(IMU.speed(IX1)) nanmean(IMU.speed(IX2)) nanmean(IMU.speed(IX3))];% % Ket base and post% IX1 = IMU.t_uS > TIMES.BaselineUsec(1) & IMU.t_uS < TIMES.BaselineUsec(2);% IX2 = IMU.t_uS > TIMES.KetPostInjectionUsec(1,1) & IMU.t_uS < TIMES.KetPostInjectionUsec(1,2);% % Store information for analysis% OUT.Ket_Jerk_Before_After = [nanmean(IMU.absjerk(IX1)) nanmean(IMU.absjerk(IX2))];% OUT.Ket_JerkPC1_Before_After = [nanmean(IMU.absjerkpc(IX1)) nanmean(IMU.absjerkpc(IX2))];% OUT.Ket_IMU_Speed_Before_After = [nanmean(IMU.speed(IX1)) nanmean(IMU.speed(IX2))];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Always visualize.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% movementif PLOT_IT    figure    plot(IMU.t_uS/60e6,IMU.absjerk)    hold on    plot(IMU.t_uS/60e6,IMU.speed,'k')        ylabel('Jerk')    xlabel('min')    plot_markers_simple(TIMES.SalStartEndUsec/60e6,[],[],[.9 1 .1])    plot_markers_simple(TIMES.KetStartEndUsec/60e6,[],[],GP.Colors.Ketamine)    plot_markers_simple(TIMES.BaselineUsec/60e6,[],[],'g')    plot_markers_simple(TIMES.SalPostInjectionUsec/60e6,[],[],'c')    plot_markers_simple(TIMES.KetPostInjectionUsec/60e6,[],[],'c')        yyaxis right    plot(POS.Time_uS/60e6,POS.speed)    ylabel('speed from x and y')    pubify_figure_axis    axis tight    title('Position Data')    %     figure%     plot(IMU.t_uS/60e6,IMU.absjerk)%     hold on%     plot(IMU.t_uS/60e6,IMU.speed,'k')%     %     ylabel('Jerk')%     xlabel('min')%     plot_markers_simple(TIMES.SalStartEndUsec/60e6,[],[],GP.Colors.Saline)%     plot_markers_simple(TIMES.BaselineUsec/60e6,[],[],'g')%     plot_markers_simple(TIMES.SalPostInjectionUsec/60e6,[],[],'c')%     %     yyaxis right%     plot(POS.Time_uS/60e6,POS.speed)%     ylabel('speed from x and y')%     pubify_figure_axis%     axis tight%     title('Position Data')        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    % speed    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    figure    subplot(3,1,1)    bar(OUT.Speed_Base_Sal_Ket)    set(gca,'XTickLabel',{'base' 'sal after' 'ket after'})    ylabel('Speed')    pubify_figure_axis    subplot(3,1,2)    bar(OUT.Jerk_Base_Sal_Ket)    set(gca,'XTickLabel',{'base' 'sal after' 'ket after'})    ylabel('Jerk')    pubify_figure_axis    subplot(3,1,3)    bar(OUT.IMU_Speed_Base_Sal_Ket)    set(gca,'XTickLabel',{'base' 'sal after' 'ket after'})    ylabel('IMU Speed')    pubify_figure_axis    %     subplot(3,2,1)%     bar(OUT.Sal_Speed_Before_After)%     set(gca,'XTickLabel',{'sal before' 'sal after'})%     ylabel('Speed')%     pubify_figure_axis%     subplot(3,2,2)%     bar(OUT.Sal_Jerk_Before_After)%     set(gca,'XTickLabel',{'sal before' 'sal after'})%     ylabel('Jerk')%     pubify_figure_axis%     subplot(3,2,3)%     bar(OUT.Sal_IMU_Speed_Before_After)%     set(gca,'XTickLabel',{'sal before' 'sal after'})%     ylabel('IMU Speed')%     pubify_figure_axisend%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Overview: Generate a neuron by time matrix and mark when ketamine was delivered.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%binsize_ms = 10000;[Q,start_end_times] = Bin_ts_array(TS, binsize_ms*1000); % workhorse function for neuron x time matrixIX = start_end_times(:,1)<TIMES.SalStartEndUsec(1);Qn = Q-mean(Q(IX,:));[~,sc] = pca(Qn);edges = TIMES.BaselineUsec(1,1):binsize_ms*1000:TIMES.BaselineUsec(1,2);[Qbase,bins_uS] = Bin_ts_array(TS, edges);edges = TIMES.SalPostInjectionUsec(1,1):binsize_ms*1000:TIMES.SalPostInjectionUsec(1,2);[Qsal,x1] = Bin_ts_array(TS, edges);edges = TIMES.KetPostInjectionUsec(1,1):binsize_ms*1000:TIMES.KetPostInjectionUsec(1,2);[Qket,x2] = Bin_ts_array(TS, edges);% figure% subplot(1,3,1)% imagesc(Qbase')%% subplot(1,3,2)% imagesc(Qpost1')%% subplot(1,3,3)% imagesc(Qpost2')bins_s = binsize_ms/1000;mbase = mean(Qbase/bins_s);m1 = mean(Qsal/bins_s);m2 = mean(Qket/bins_s);OUT.FRates_base = mbase;OUT.FRates_sal = m1;OUT.FRates_ket = m2;OUT.Qbase = Qbase;OUT.Qbase_bins_uS = bins_uS;OUT.Qsal = Qsal;OUT.Qsal_bins_uS = x1;OUT.Qket = Qket;OUT.Qket_bins_uS = x2;if PLOT_IT        figure    subplot(5,1,1)    imagesc(start_end_times(:,1)/60e6,[],Q')    plot_markers(TIMES.KetStartEndUsec/60e6);    plot_markers(TIMES.SalStartEndUsec/60e6);    colorbar    xlabel('min')    ylabel('neuron')    title(sprintf('Binsize %d s',binsize_ms/1000))    plot_markers_simple(TIMES.KetStartEndUsec/60e6);    plot_markers_simple(TIMES.SalStartEndUsec/60e6);    plot_markers_simple(TIMES.BaselineUsec/60e6,[],[],'w');    plot_markers_simple(TIMES.KetPostInjectionUsec/60e6,[],[],'g');    plot_markers_simple(TIMES.SalPostInjectionUsec/60e6,[],[],'r');        subplot(5,1,2)    % same but subtract mean rate at beginning.        imagesc(start_end_times(:,1)/60e6,[],Qn')    plot_markers_simple(TIMES.KetStartEndUsec/60e6);    plot_markers_simple(TIMES.SalStartEndUsec/60e6);    plot_markers_simple(TIMES.BaselineUsec/60e6,[],[],'w');    plot_markers_simple(TIMES.KetPostInjectionUsec/60e6,[],[],'g');    plot_markers_simple(TIMES.SalPostInjectionUsec/60e6,[],[],'r');        colorbar    xlabel('min')    ylabel('neuron')    title('Subtract rate before first injection')        subplot(5,1,3)    plot_confidence_intervals(start_end_times(:,1)/60e6,Q')    ylabel('Mean Neural activity')    yyaxis right    plot_confidence_intervals(start_end_times(:,1)/60e6,Qn',[],[.8 .1 .1])    plot_markers_simple(TIMES.KetStartEndUsec/60e6);    plot_markers_simple(TIMES.SalStartEndUsec/60e6);    ylabel('norm neural activity')        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    %% Plot mean firing rates before and after ketamine.    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    subplot(5,1,4)        %     plot([mbase;m1;m2]')    plot(start_end_times(:,1)/60e6,sc(:,1:2));    axis tight    %     ylabel('Hz')    %     legend('pre','p1','p2','FontSize',8)    %     title('Firing rates')    subplot(5,1,5)    h = bar(([m1;m2]- mbase)');    h(1).FaceColor = 'k';    h(2).FaceColor = 'b';    set(gca,'Colormap',jet())    legend('sal','ket','FontSize',8)    legend boxoff    title('rate after subtracting baseline')    xlabel('Neuron')        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    % plot overall difference score in firing rates    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    figure    histogram_cowen({[m1 - mbase], [m2 - mbase]},.1);    legend('sal','ket','FontSize',8)    legend boxoff    plot_vert_line_at_zero    xlabel('Change in Firing Rate')    [~,sal] = ttest([m1 - mbase]);    [~,ket] = ttest([m2 - mbase]);    title(sprintf('ttest: sal %0.4f, ket %0.4f',sal,ket));end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Look at autocorrelations before and after and the difference between% do it for the pre-injection period but also for the 2-20 minute and 30-50% minute post periods.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%[AC,x] = AutoCorrArray(TS,bin_size_ms*1000,acorr_width_ms*1000,[TIMES.BaselineUsec;TIMES.SalPostInjectionUsec;TIMES.KetPostInjectionUsec]);ACd = AC -  AC(:,:,1);cm = lines(5);OUT.AC = AC;OUT.AC_x_ms = x/1000;OUT.AC_conditions = {'base' 'sal' 'ket'};% disp('ACorr')if PLOT_IT    titls = OUT.AC_conditions;    CIX = x/1000 > 120;        figure    for ii = 1:length(titls)        subplot(1,length(titls),ii)        a = squeeze(AC(:,:,ii));        a = a - mean(a(:,CIX),2);        imagesc(x/1000,[],a)        title(titls{ii})    end    equalize_color_axes        figure    titls = {'sal' 'ket'};    for ii = 1:length(titls)        hh(ii) = subplot(1,length(titls),ii);        imagesc(x/1000,[],AC(:,:,ii+1)- AC(:,:,1))        title(titls{ii})        colorbar        colormap(parula);    end    equalize_color_axes(hh);        figure    for ii = 1:3        a = squeeze(AC(:,:,ii));        a = a - mean(a(:,CIX),2);        plot_confidence_intervals(x/1000,a,[],cm(ii,:));    end    legend_color_text(OUT.AC_conditions,cm(1:3,:));    %     figure%     plot_confidence_intervals(x/1000,squeeze(AC(:,:,1)),[],cm(1,:))%     plot_confidence_intervals(x/1000,squeeze(AC(:,:,3)),[],cm(2,:))%     plot_horiz_line_at_zero            figure    plot_confidence_intervals(x/1000,squeeze(ACd(:,:,2)),[],cm(1,:))    plot_confidence_intervals(x/1000,squeeze(ACd(:,:,3)),[],cm(2,:))    plot_horiz_line_at_zero    xlabel('ms')    ylabel('Difference from baseline')    title('Autocorr after saline and ketamine relative to baseline')    legend_color_text({'sal' 'ket'},{cm(1,:) cm(2,:)});end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Smooth autocorr%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disp('SACorr')TSx{1} = Restrict(TS,TIMES.BaselineUsec);TSx{2} = Restrict(TS,TIMES.SalPostInjectionUsec);TSx{3} = Restrict(TS,TIMES.KetPostInjectionUsec);binsize_ms = 2;smth_win_ms = 8;acorr_size_ms = 250;jitter_ms = 500;if 0    for ii = 1:length(TS)        for jj = 1:length(TSx)            [OUT.AcorrSmth_Base_Sal_Ket(ii,:,jj),OUT.AcorrSmth_x_ms, CI] = ...                CrossCorr_smooth(TSx{jj}{ii}/1000,[],binsize_ms,acorr_size_ms/binsize_ms,smth_win_ms/binsize_ms,jitter_ms);            OUT.AcorrSmthCI95up_Base_Sal_Ket(ii,:,jj)= CI(1,:);            OUT.AcorrSmthCI95down_Base_Sal_Ket(ii,:,jj)= CI(2,:);            %         CrossCorr_smooth(TSx{jj}{ii}/1000,[],binsize_ms,acorr_size_ms/binsize_ms,smth_win_ms/binsize_ms,jitter_ms)        end    endend% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %% Look at local variance...% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disp('LV')SSS = [];OUT.LocVar_Base_Sal_Ket = [];for ii = 1:length(TSx{1})    for jj = 1:length(TSx)        OUT.LocVar_Base_Sal_Ket(ii,jj) = LocalVariance(diff(TSx{jj}{ii}),10e6);        SSS{ii,jj} = Spiking_summary_stats(TSx{jj}{ii}/1000);    endendOUT.SSS = SSS;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PSDs of each spike train - another way to analyze oscillations -% the stats are easier to interpret I think.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if 0    fqs = 1:.5:70;    OUT.SpikePSD_fqs = fqs;    OUT.SpikePSD_Base_Sal_Ket = [];    OUT.SpikePSD_Base_Sal_KetZ = [];    for iS = 1:length(TS)        for jj = 1:length(TSx)            %         OUT.SpikePSD_Before_Early_Late(iS,:,jj) = Spike_psd(TSx{jj}{iS}/1000,5,fqs,20);            %         OUT.SpikePSD_Before_Early_Late(iS,:,jj) = Spike_psd(TSx{jj}{iS}/1000,5,fqs,[]);            [OUT.SpikePSD_Base_Sal_Ket(iS,:,jj),~,~,OUT.SpikePSD_Base_Sal_KetZ(iS,:,jj)] = Spike_psd(TSx{jj}{iS}/1000,5,fqs,25);        end    end    if PLOT_IT        figure        for ii = 1:3            subplot(1,3,ii)            imagesc(fqs,[],squeeze(OUT.SpikePSD_Base_Sal_Ket(:,:,ii)))        end        equalize_color_axes        colorbar_label        figure        for ii = 1:3            subplot(1,3,ii)            imagesc(fqs,[],squeeze(OUT.SpikePSD_Base_Sal_KetZ(:,:,ii)))            title('Z')        end        equalize_color_axes        colorbar_label    endend