function [NP, SP, CV] = Q2_does_DA_affect_ensemble_act_load(data_dir, CV_long_csv_file)
%
%% Works for one dataset.
PLOT_IT = true;
if nargin == 0
    data_dir = fullfile(Git_dir,'\DANA\Data\Acute\20200527\Rat_B_unknown\52722_DANA_7000uM_bank0_g0');
    % CV_xlsx_file = '20220527 data.xlsx';
    CV_long_csv_file = 'CV_data.csv';
end

EVT_IMEC_Sync_Ch_ix = 1; % not the actual channel number but chann number + 1 (ix in the matrix)
EVT_Sync_Ch_ix = 5; % not the actual channel number but chann number + 1 (ix in the matrix)
EVT_Stim_Ch_ix = 6;
EVT_Scan_Ch_ix = 4; % one plus the channel number
% Load the spikes:
load(fullfile(data_dir,'AllSpikes.mat'),'SP');
% Load the events
load(fullfile(data_dir,'Events.mat'),'EVT');
NP.stim_times_sec = EVT.up_t_uS{EVT.channels == EVT_Stim_Ch_ix}(:)/1e6;
NP.stim_times_down_sec = EVT.down_t_uS{EVT.channels == EVT_Stim_Ch_ix}(:)/1e6;
NP.scan_pulse_times_sec = EVT.up_t_uS{EVT.channels == EVT_Scan_Ch_ix}(:)/1e6;
NP.scan_pulse_times_down_sec = EVT.down_t_uS{EVT.channels == EVT_Scan_Ch_ix}(:)/1e6;
NP.sync_times_up_sec = EVT.up_t_uS{EVT.channels == EVT_Sync_Ch_ix}(:)/1e6;
NP.sync_times_down_sec = EVT.down_t_uS{EVT.channels == EVT_Sync_Ch_ix}(:)/1e6;
NP.IMEC_sync_times_up_sec = EVT.up_t_uS{EVT.channels == EVT_IMEC_Sync_Ch_ix}(:)/1e6;

if PLOT_IT
    figure;
    plot(NP.scan_pulse_times_sec,ones(size(NP.scan_pulse_times_sec)),'.');
    hold on
    plot(NP.stim_times_sec, 1+ones(size(NP.stim_times_sec)),'o');
    plot(NP.sync_times_up_sec,2+ones(size(NP.sync_times_up_sec)),'g>');
    plot(NP.sync_times_down_sec,2+ones(size(NP.sync_times_down_sec)),'m<');
    plot(NP.IMEC_sync_times_up_sec,3+ones(size(NP.IMEC_sync_times_up_sec)),'r+');
    legend('scan','stim','syncup','syncdown','IMEC')
end
% scan_pulse_fq = 1/median(diff(NP.scan_pulse_times_sec)); % should be 5Hz - sanity check
% From the stim times, determine the 'trial' (a trial is when a set of pulses
% is delivered) and the LV associated with each trial. Extract other useful
% things like the time of trial start and end.
% NPTI = DANA_trial_info_from_stim_times(NP.stim_times_sec);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Load the CV file
% CV = DANA_load_wccv_excel_file(fullfile(data_dir,CV_xlsx_file));
CV = readtable(fullfile(data_dir,CV_long_csv_file));
CV.True_time_s = [0;cumsum(abs(diff(CV.trial_time_s)))];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if PLOT_IT
    figure
    plot(CV.True_time_s,CV.Concentration) % just for visualization - true times are not what's in the Neurpixels system.
    % Looks like there are 20 trials with data. There are 40 in the CV, but 10Hz was not
    % recorded so I think this explains why there are only half.
    figure
    plot(CV.TrialID)
    hold on
    plot(CV.WithinConditionTrialID  )
    plot(CV.Hz)
    yyaxis right
    plot(CV.LV)
end
% Synchonize
%
% The file collects 900 scans, from 0 s to 179.8 s with the TTL signal
% going off at 10 s and going off at 20 s. The reason for some of the
% missing scans is because there is currently a small issue where the TTL
% will trigger a scan early which then offsets the data by a scan, so to
% correct this the data is simply shifted forward a scan leaving a blank at
% 0 s. Because of this, we should probably only include the scans from 0.2
% s to 179.8 s. Using the truncated data, there will be 49 scans before the
% stimulation (9.8 seconds) or we can use the 0 s point and there will be
% 50 scans before but for some of the files scan 0 will be blank.

%%
% Make a new col in CV that has the intan times.
% Find the trial start in intan time and then like the scan times (in
% intan) to the scan times in Trial info.
% The mystery are the points before and  afer the sync - how many before
% and after? this is not recorded. Ugh. I Know the within-stim times in CV
% and Neurpix, so let's start there.
NP.Stim_Start_sec = zeros(length(NP.sync_times_up_sec)-1,1);
for iT = 1:(length(NP.sync_times_up_sec)-1)
    % seems to make sense to me, but need to have Nathan and Andrea check.
    ix = find(NP.scan_pulse_times_sec >= NP.sync_times_up_sec(iT) ,1,"first" );
    NP.Stim_Start_sec(iT) = NP.scan_pulse_times_sec(ix);
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    IX = find(NP.scan_pulse_times_sec > NP.sync_times_up_sec(iT) - 10 & ...
        NP.scan_pulse_times_sec < (NP.sync_times_up_sec(iT) + 169.8));

    NP.within_trial_scan_times_s = NP.scan_pulse_times_sec(IX);

    % length(NP.within_stimtrain_scan_times_s)
    % CV
    ix = find(CV.TrialID == iT);
    CV.NP_times_sec(ix(1:900)) = NP.within_trial_scan_times_s(1:900);
    %     % Seems like all of this is redundant with the CV thing.
    NP.WithinConditionTrialID(iT)  = CV.WithinConditionTrialID(ix(1));
    NP.LV(iT)  = CV.LV(ix(1));
    NP.Hz(iT)  = CV.Hz(ix(1));

    %     figure
    %     plot(CV.trial_time_s(ix),CV.Concentration(ix),'.')
    % recall that these are just the scans during the stim, not all the
    % scans.
    if length(ix) < 50
        disp('burp')
        continue
    end
end
