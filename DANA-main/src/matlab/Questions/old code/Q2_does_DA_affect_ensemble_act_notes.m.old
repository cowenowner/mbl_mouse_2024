% 
%% Works for one dataset.
data_dir = fullfile(Git_dir,'\DANA\Data\Acute\20200527\Rat_B_unknown\52722_DANA_7000uM_bank0_g0');
CV_xlsx_file = '20220527 data.xlsx';
CV_long_csv_file = 'CV_data.csv';

CV_scan_times_file = '52722_DANA_7000uM_bank0_g0_tcat.nidq.xa_3_0.txt';
CV_trial_order_file = 'trial_order_5_27_2022.csv'; % should really be in the CV file - not as a separate file.

EVT_IMEC_Sync_Ch_ix = 1; % not the actual channel number but chann number + 1 (ix in the matrix)
EVT_Sync_Ch_ix = 5; % not the actual channel number but chann number + 1 (ix in the matrix)
EVT_Stim_Ch_ix = 6;
EVT_Scan_Ch_ix = 4; % one plus the channel number

imec_timing_file = '52722_DANA_7000uM_bank0_g0_tcat.nidq.xa_0_0.txt';
sync_timing_file = '52722_DANA_7000uM_bank0_g0_tcat.nidq.xa_4_0.txt';
stim_timing_file = '52722_DANA_7000uM_bank0_g0_tcat.nidq.xa_5_0.txt';


binsize_ms = 100;
% Load the spikes:
load(fullfile(data_dir,'AllSpikes.mat'),'SP');
T_uS = [];
for iC = 1:length(SP)
    T_uS{iC} = SP(iC).t_uS;
end
[~,six] = sort([SP.depth_uM]);
[Q, Q_uS] = histcounts_cowen(T_uS,'binsize',binsize_ms*1000);
figure
imagesc(Q_uS/60e6,[],Q(:,six)')
caxis([0 5])
% Load the events
load(fullfile(data_dir,'Events.mat'),'EVT');
stim_times_sec2 = EVT.up_t_uS{EVT.channels == EVT_Stim_Ch_ix}(:)/1e6;
scan_pulse_times_sec2 = EVT.up_t_uS{EVT.channels == EVT_Scan_Ch_ix}(:)/1e6;
sync_times_up_sec = EVT.up_t_uS{EVT.channels == EVT_Sync_Ch_ix}(:)/1e6;
sync_times_down_sec = EVT.down_t_uS{EVT.channels == EVT_Sync_Ch_ix}(:)/1e6;

figure
for ii = 1:5
    t = EVT.up_t_uS{ii}(:)/1e6;
    %plot(t,ii*ones(size(t)),'+');
    figure
    histogram(diff(t),0:.01:.3);
    title(num2str(ii))
end
legend

figure; 
plot(scan_pulse_times_sec2,ones(size(scan_pulse_times_sec2)),'.');
hold on
plot(stim_times_sec2,1+ones(size(stim_times_sec2)),'o');
plot(sync_times_up_sec,2+ones(size(sync_times_up_sec)),'g>');
plot(sync_times_down_sec,3+ones(size(sync_times_down_sec)),'m<');




imec_times_sec = load(fullfile(data_dir,imec_timing_file));
sync_times_sec = load(fullfile(data_dir,sync_timing_file));
scan_pulse_times_sec = load(fullfile(data_dir,CV_scan_times_file));
stim_times_sec = load(fullfile(data_dir,stim_timing_file));
scan_pulse_fq = 1/median(diff(scan_pulse_times_sec));
% From the stim times, determine the 'trial' (a trial is when a set of pulses 
% is delivered) and the LV associated with each trial. Extract other useful
% things like the time of trial start and end.
TI = DANA_trial_info_from_stim_times(stim_times_sec);

%%

figure; 
plot(scan_pulse_times_sec,ones(size(scan_pulse_times_sec)),'.');
hold on
plot(stim_times_sec,ones(size(stim_times_sec)),'o');
plot(sync_times_sec,ones(size(sync_times_sec)),'g+');

% Load the CV file
% CV = DANA_load_wccv_excel_file(fullfile(data_dir,CV_xlsx_file));
CV = readtable(fullfile(data_dir,CV_long_csv_file));
CV.True_time_s = [0;cumsum(abs(diff(CV.trial_time_s)))];
% Now figure out how the hell to link this to the single-unit data.



% Make a new col in CV that has the intan times.
% Find the trial start in intan time and then like the scan times (in
% intan) to the scan times in Trial info.
% The mystery are the points before and  afer the sync - how many before
% and after? this is not recorded. Ugh. I Know the within-stim times in CV
% and Neurpix, so let's start there.
NP_trial_start_times_s = zeros(length(NP_sync_times_up_sec),1);
for iT = 1:length(NP_sync_times_up_sec)
    % find the scan times in these times.
    NP_within_stimtrain_scan_times_s = NP_scan_pulse_times_sec(NP_scan_pulse_times_sec >= ...
        NP_sync_times_up_sec(iT) & NP_scan_pulse_times_sec < NP_sync_times_down_sec(iT) );
    % Find the start scan for a trial (when baseline begins).
    ix = find(NP_scan_pulse_times_sec >= NP_sync_times_up_sec(iT) - 10,1,"first" );
    NP_trial_start_times_s(iT) = NP_scan_pulse_times_sec(ix);
    
    ix = find(NP_scan_pulse_times_sec > NP_sync_times_up_sec(iT) - 10 &  NP_scan_pulse_times_sec < (NP_sync_times_up_sec(iT) + 169.8));

    NP_within_trial_scan_times_s = NP_scan_pulse_times_sec(ix);
    
    % length(NP_within_stimtrain_scan_times_s)
    % CV
    ix = find(CV.TrialID == iT);
    CV.NP_times_sec(ix(1:900)) = NP_within_trial_scan_times_s(1:900);
    

    figure
    plot(CV.trial_time_s(ix),CV.Concentration(ix),'.')
    % recall that these are just the scans during the stim, not all the
    % scans.
    if length(ix) < 50
        disp('burp')
        continue
    end
end

